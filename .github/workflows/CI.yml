# This is a basic workflow to help you get started with Actions

name: CI (Continuous Integration)

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main", "develop" ]
#   issues:
#     types: [opened]

# env:
#   TRELLO_KEY: ${{ secrets.TRELLO_API_KEY }}
#   TRELLO_TOKEN: ${{ secrets.TRELLO_API_TOKEN }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  changelog:
    name: Update Changelog
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Update Changelog
        uses: AlexxNB/chalogen@master
        with:
          title: HN Wertsfy [Next] Changelog (v2.0.0)
      - name: Commit Changelog to repository
        uses: stefanzweifel/git-auto-commit-action@v4.13.0
        with:
          commit_message: 'docs(Changelog): Update Changelog'
          file_pattern: CHANGELOG.md
  #     - name: Generate docs by Powershell (not working yet)
  #       uses: Microsoft/ps-docs@main
  #       with:
  #         inputPath: 'api/'       # Optional. The path PSDocs will look for files to input files.
  #         # modules: string         # Optional. A comma separated list of modules to use containing document definitions.
  #         source: 'api/'          # Optional. An path containing definitions to use for generating documentation.
  #         # conventions: string     # Optional. A comma separated list of conventions to use for generating documentation.
  #         outputPath: 'docs/'      # Optional. The path to write documentation to.
  #         path: '.'            # Optional. The working directory PSDocs is run from.
  #         prerelease: false     # Optional. Determine if a pre-release module version is installed.

  # code_quality:
  #   name: Code Quality Steps - by SecureStack
  #   runs-on: ubuntu-latest
  #   steps:
  #     # validate-license-action
  #     - name: validate-license-action
  #       uses: datreeio/validate-license-action@v1.0.0
  #     # SecureStack Secrets Analysis
  #     - name: Checkout repo for running secrets analysis within workflow
  #       id: checkout
  #       uses: actions/checkout@v2.4.0
  #       with:
  #         fetch-depth: 0
  #     - name: Secrets Analysis Step
  #       id: secrets
  #       uses: SecureStackCo/actions-secrets@v0.1.3
  #       with:
  #         securestack_api_key: ${{ secrets.SECURESTACK_API_KEY }}
  #         securestack_app_id: ${{ secrets.SECURESTACK_APP_ID }}
  #         severity: critical
  #         flags: '-d 1'
  #     # SecureStack All-In-One GitHub Action
  #     - name: Code Analysis Step
  #       id: code
  #       uses: SecureStackCo/actions-code@v0.1.1
  #       with:
  #         securestack_api_key: ${{ secrets.SECURESTACK_API_KEY }}
  #         securestack_app_id: ${{ secrets.SECURESTACK_APP_ID }}
  #         severity: critical
  #         language: node
  #     - name: Exposure Analysis Step
  #       id: exposure
  #       uses: SecureStackCo/actions-exposure@v0.1.3
  #       with:
  #         securestack_api_key: ${{ secrets.SECURESTACK_API_KEY }}
  #         securestack_app_id: ${{ secrets.SECURESTACK_APP_ID }}
  #         severity: critical
  #         flags: '--dom -r'
  #     - name: Create SBOM
  #       id: sbom
  #       uses: SecureStackCo/actions-sbom@v0.1.1
  #       with:
  #         securestack_api_key: ${{ secrets.SECURESTACK_API_KEY }}
  #         securestack_app_id: ${{ secrets.SECURESTACK_APP_ID }}
  #         severity: critical
  #     # action-git-diff-suggestions
  #     - name: action-git-diff-suggestions
  #       uses: getsentry/action-git-diff-suggestions@v1
          
  # code_review:
  #   name: Code Review Steps - by SecureStack
  #   runs-on: ubuntu-latest
  #   steps:
  #     # SecureStack Log4j Vulnerability Analysis
  #     - name: Checkout repo for running log4j analysis
  #       id: checkout
  #       uses: actions/checkout@v2.4.0
  #       with:
  #         fetch-depth: 0
  #     - name: Log4j Scanning Step
  #       id: log4j
  #       uses: SecureStackCo/actions-log4j@v0.1.3
  #       with:
  #         securestack_api_key: ${{ secrets.SECURESTACK_API_KEY }}
  #         securestack_app_id: ${{ secrets.SECURESTACK_APP_ID }}
  #         severity: critical
  #     # SecureStack Application Bill of Materials (ABOM/SBOM)
  #     - name: Create ABOM
  #       id: abom
  #       uses: SecureStackCo/actions-abom@v0.1.3
  #       with:
  #         securestack_api_key: ${{ secrets.SECURESTACK_API_KEY }}
  #         securestack_app_id: ${{ secrets.SECURESTACK_APP_ID }}
  #         severity: critical

  # codacy:
  #   name: Codacy Analysis
  #   runs-on: ubuntu-latest
  #   steps:
  #     # Codacy Git Version
  #     - name: Checkout Code
  #       uses: actions/checkout@v3
  #       with:
  #         ref: ${{ github.head_ref }}   # checkout the correct branch name
  #         fetch-depth: 0                # fetch the whole repo history
  #     - name: Git Version
  #       id: version
  #       uses: codacy/git-version@2.7.1
  #     - name: Use the version
  #       run: |
  #         echo ${{ steps.version.outputs.version }}
  #     - name: Use the previous version
  #       run: |
  #         echo ${{ steps.version.outputs.previous-version }}
  #     # Codacy Analysis CLI
  #     - name: Checkout code
  #       uses: actions/checkout@main
  #     - name: Run Codacy Analysis CLI
  #       uses: codacy/codacy-analysis-cli-action@master
  #       with:
  #         directory: api
  #         verbose: true
  #         run-gosec: "true"
  #         run-staticcheck: "true"
  #         # project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
  #         # or
  #         api-token: ${{ secrets.CODACY_API_TOKEN }}
  #         upload: true
  #         max-allowed-issues: 2147483647
  #     # Codacy Coverage Reporter
  #     - uses: actions/checkout@v2
  #     - name: Run codacy-coverage-reporter
  #       uses: codacy/codacy-coverage-reporter-action@v1
  #       with:
  #         # project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
  #         # or
  #         api-token: ${{ secrets.CODACY_API_TOKEN }}
  #         coverage-reports: './'
  #         # or a comma-separated list for multiple reports
  #         # coverage-reports: <PATH_TO_REPORT>, <PATH_TO_REPORT>

  # docsify:
  #   name: Docsify
  #   runs-on: ubuntu-latest
  #   steps:
  #     # docsify-action
  #     - uses: actions/checkout@master
  #     - uses: tool3/docsify-action@master
  #       with:
  #         github_token: ${{ secrets.GP_TOKEN }}
  #         dir: docs_automated
  #         branch: develop
  #         commit_msg: Docs Automated Update ðŸ“š

  # trello:
  #   name: Trello Workflow
  #   runs-on: ubuntu-latest
  #   steps:
  #     # action-trello-connector
  #     - uses: actions/checkout@v3
  #     - name: action-trello-connector
  #       uses: shirobrak/action-trello-connector@v1.0.0
  #       with:
  #         github_token: ${{ secrets.GP_TOKEN }}
  #         trello_api_key: ${{ secrets.TRELLO_API_KEY }}
  #         trello_api_token: ${{ secrets.TRELLO_API_TOKEN }}
  #         trello_board_id: ${{ secrets.TRELLO_BOARD_ID }}
  #         prefix_word: "#wtsfy"
  #     # trello-manage
  #     - name: Runs trello manage - Send Issue to Trello
  #       uses: sisodiya2421/trello-manage@master
  #       with:
  #         repo-name: ${{ github.repository }}
  #         trello-username: ${{ secrets.TRELLO_USERNAME }}
      
      # trello-create-card-action
      # - name: Create a Trello Card
      #   uses: TrisNol/trello-create-card-action@main
      #   with:
      #     api_key: ${{ secrets.TRELLO_API_KEY }}
      #     token: ${{ secrets.TRELLO_TOKEN }}
      #     board_id: "e44b6oBU"
      #     list_name: "To Do"
      #     card_name: ${{ github.event.pull_request.title }}
      #     card_description: ${{ github.repositoryUrl }}

      # trello-assign-card-action
      # https://github.com/marketplace/actions/integrate-github-and-trello-issue

      # trello-github-automation
      # https://github.com/marketplace/actions/trello-github-automation

      # github-commit-to-trello-card-fork
      # name: GitHub Commit To Trello Comment

      # on: [push, pull_request]

      # jobs:
      #   build:
      #     runs-on: ubuntu-latest

      #     steps:
      #       - uses: actions/checkout@v2

      #       - uses: dalezak/github-commit-to-trello-card@main
      #         with:
      #           trello-api-key: ${{ secrets.TRELLO_KEY }}
      #           trello-auth-token: ${{ secrets.TRELLO_TOKEN }}
      #           trello-board-id: ${{ secrets.TRELLO_BOARD }}
      #           trello-card-action: "Attachment"
      #           trello-list-name-commit: "Doing"
      #           trello-list-name-pr-open: "Reviewing"
      #           trello-list-name-pr-closed: "Testing"
  
  # debug_test:
      # super-linter
      # https://github.com/marketplace/actions/super-linter
