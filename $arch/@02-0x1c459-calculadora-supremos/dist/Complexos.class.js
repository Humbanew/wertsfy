"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Complexos = void 0;
/**
 * @todo Componente com necessidade de atualizações, módulos incompletos ou não implementados.
 */
class Complexos {
    // ainda em revisão de construção
    soma_num_complexos(expressao_a, expressao_b) {
        let a = expressao_a.split('+');
        let b = expressao_b.split('+');
        let real_a = parseInt(a[0]);
        let real_b = parseInt(b[0]);
        let imag_a = parseInt(a[1]);
        let imag_b = parseInt(b[1]);
        let real = real_a + real_b;
        let imag = imag_a + imag_b;
        return real + '+' + imag + 'i';
    }
    subtracao_num_complexos(expressao_a, expressao_b) {
        let a = expressao_a.split('+');
        let b = expressao_b.split('+');
        let real_a = parseInt(a[0]);
        let real_b = parseInt(b[0]);
        let imag_a = parseInt(a[1]);
        let imag_b = parseInt(b[1]);
        let real = real_a - real_b;
        let imag = imag_a - imag_b;
        return real + '+' + imag + 'i';
    }
    multiplicacao_num_complexos(expressao_a, expressao_b) {
        let a = expressao_a.split('+');
        let b = expressao_b.split('+');
        let real_a = parseInt(a[0]);
        let real_b = parseInt(b[0]);
        let imag_a = parseInt(a[1]);
        let imag_b = parseInt(b[1]);
        let real = real_a * real_b - imag_a * imag_b;
        let imag = real_a * imag_b + imag_a * real_b;
        return real + '+' + imag + 'i';
    }
    divisao_num_complexos(expressao_a, expressao_b) {
        let a = expressao_a.split('+');
        let b = expressao_b.split('+');
        let real_a = parseInt(a[0]);
        let real_b = parseInt(b[0]);
        let imag_a = parseInt(a[1]);
        let imag_b = parseInt(b[1]);
        let real = (real_a * real_b + imag_a * imag_b) / (real_b * real_b + imag_b * imag_b);
        let imag = (imag_a * real_b - real_a * imag_b) / (real_b * real_b + imag_b * imag_b);
        return real + '+' + imag + 'i';
    }
    modulo_num_complexos(expressao) {
        let a = expressao.split('+');
        let real = parseInt(a[0]);
        let imag = parseInt(a[1]);
        return Math.sqrt(real * real + imag * imag);
    }
    conjugado_num_complexos(expressao) {
        let a = expressao.split('+');
        let real = parseInt(a[0]);
        let imag = parseInt(a[1]);
        return real + '+' + (-imag) + 'i';
    }
}
exports.Complexos = Complexos;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29tcGxleG9zLmNsYXNzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vQ29tcGxleG9zLmNsYXNzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBOztHQUVHO0FBQ0gsTUFBc0IsU0FBUztJQUUvQixpQ0FBaUM7SUFDeEIsa0JBQWtCLENBQUMsV0FBbUIsRUFBRSxXQUFtQjtRQUVoRSxJQUFJLENBQUMsR0FBRyxXQUFXLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQy9CLElBQUksQ0FBQyxHQUFHLFdBQVcsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDL0IsSUFBSSxNQUFNLEdBQUcsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQzVCLElBQUksTUFBTSxHQUFHLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUM1QixJQUFJLE1BQU0sR0FBRyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDNUIsSUFBSSxNQUFNLEdBQUcsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQzVCLElBQUksSUFBSSxHQUFHLE1BQU0sR0FBRyxNQUFNLENBQUM7UUFDM0IsSUFBSSxJQUFJLEdBQUcsTUFBTSxHQUFHLE1BQU0sQ0FBQztRQUMzQixPQUFPLElBQUksR0FBRyxHQUFHLEdBQUcsSUFBSSxHQUFHLEdBQUcsQ0FBQztJQUNqQyxDQUFDO0lBRU0sdUJBQXVCLENBQUMsV0FBbUIsRUFBRSxXQUFtQjtRQUVyRSxJQUFJLENBQUMsR0FBRyxXQUFXLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQy9CLElBQUksQ0FBQyxHQUFHLFdBQVcsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDL0IsSUFBSSxNQUFNLEdBQUcsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFD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MUIsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLEdBQUcsSUFBSSxHQUFHLElBQUksQ0FBQyxDQUFDO0lBQzlDLENBQUM7SUFFTSx1QkFBdUIsQ0FBQyxTQUFpQjtRQUU5QyxJQUFJLENBQUMsR0FBRyxTQUFTLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQzdCLElBQUksSUFBSSxHQUFHLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUMxQixJQUFJLElBQUksR0FBRyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDMUIsT0FBTyxJQUFJLEdBQUcsR0FBRyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxHQUFHLENBQUM7SUFDcEMsQ0FBQztDQUVGO0FBdkVELDhCQXVFQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBAdG9kbyBDb21wb25lbnRlIGNvbSBuZWNlc3NpZGFkZSBkZSBhdHVhbGl6YcOnw7VlcywgbcOzZHVsb3MgaW5jb21wbGV0b3Mgb3UgbsOjbyBpbXBsZW1lbnRhZG9zLlxyXG4gKi9cclxuZXhwb3J0IGFic3RyYWN0IGNsYXNzIENvbXBsZXhvcyBcclxue1xyXG4vLyBhaW5kYSBlbSByZXZpc8OjbyBkZSBjb25zdHJ1w6fDo29cclxuICBwdWJsaWMgc29tYV9udW1fY29tcGxleG9zKGV4cHJlc3Nhb19hOiBzdHJpbmcsIGV4cHJlc3Nhb19iOiBzdHJpbmcpOiBzdHJpbmdcclxuICB7XHJcbiAgICBsZXQgYSA9IGV4cHJlc3Nhb19hLnNwbGl0KCcrJyk7XHJcbiAgICBsZXQgYiA9IGV4cHJlc3Nhb19iLnNwbGl0KCcrJyk7XHJcbiAgICBsZXQgcmVhbF9hID0gcGFyc2VJbnQoYVswXSk7XHJcbiAgICBsZXQgcmVhbF9iID0gcGFyc2VJbnQoYlswXSk7XHJcbiAgICBsZXQgaW1hZ19hID0gcGFyc2VJbnQoYVsxXSk7XHJcbiAgICBsZXQgaW1hZ19iID0gcGFyc2VJbnQoYlsxXSk7XHJcbiAgICBsZXQgcmVhbCA9IHJlYWxfYSArIHJlYWxfYjtcclxuICAgIGxldCBpbWFnID0gaW1hZ19hICsgaW1hZ19iO1xyXG4gICAgcmV0dXJuIHJlYWwgKyAnKycgKyBpbWFnICsgJ2knO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIHN1YnRyYWNhb19udW1fY29tcGxleG9zKGV4cHJlc3Nhb19hOiBzdHJpbmcsIGV4cHJlc3Nhb19iOiBzdHJpbmcpOiBzdHJpbmdcclxuICB7XHJcbiAgICBsZXQgYSA9IGV4cHJlc3Nhb19hLnNwbGl0KCcrJyk7XHJcbiAgICBsZXQgYiA9IGV4cHJlc3Nhb19iLnNwbGl0KCcrJyk7XHJcbiAgICBsZXQgcmVhbF9hID0gcGFyc2VJbnQoYVswXSk7XHJcbiAgICBsZXQgcmVhbF9iID0gcGFyc2VJbnQoYlswXSk7XHJcbiAgICBsZXQgaW1hZ19hID0gcGFyc2VJbnQoYVsxXSk7XHJcbiAgICBsZXQgaW1hZ19iID0gcGFyc2VJbnQoYlsxXSk7XHJcbiAgICBsZXQgcmVhbCA9IHJlYWxfYSAtIHJlYWxfYjtcclxuICAgIGxldCBpbWFnID0gaW1hZ19hIC0gaW1hZ19iO1xyXG4gICAgcmV0dXJuIHJlYWwgKyAnKycgKyBpbWFnICsgJ2knO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIG11bHRpcGxpY2FjYW9fbnVtX2NvbXBsZXhvcyhleHByZXNzYW9fYTogc3RyaW5nLCBleHByZXNzYW9fYjogc3RyaW5nKTogc3RyaW5nXHJcbiAge1xyXG4gICAgbGV0IGEgPSBleHByZXNzYW9fYS5zcGxpdCgnKycpO1xyXG4gICAgbGV0IGIgPSBleHByZXNzYW9fYi5zcGxpdCgnKycpO1xyXG4gICAgbGV0IHJlYWxfYSA9IHBhcnNlSW50KGFbMF0pO1xyXG4gICAgbGV0IHJlYWxfYiA9IHBhcnNlSW50KGJbMF0pO1xyXG4gICAgbGV0IGltYWdfYSA9IHBhcnNlSW50KGFbMV0pO1xyXG4gICAgbGV0IGltYWdfYiA9IHBhcnNlSW50KGJbMV0pO1xyXG4gICAgbGV0IHJlYWwgPSByZWFsX2EgKiByZWFsX2IgLSBpbWFnX2EgKiBpbWFnX2I7XHJcbiAgICBsZXQgaW1hZyA9IHJlYWxfYSAqIGltYWdfYiArIGltYWdfYSAqIHJlYWxfYjtcclxuICAgIHJldHVybiByZWFsICsgJysnICsgaW1hZyArICdpJztcclxuICB9XHJcblxyXG4gIHB1YmxpYyBkaXZpc2FvX251bV9jb21wbGV4b3MoZXhwcmVzc2FvX2E6IHN0cmluZywgZXhwcmVzc2FvX2I6IHN0cmluZyk6IHN0cmluZ1xyXG4gIHtcclxuICAgIGxldCBhID0gZXhwcmVzc2FvX2Euc3BsaXQoJysnKTtcclxuICAgIGxldCBiID0gZXhwcmVzc2FvX2Iuc3BsaXQoJysnKTtcclxuICAgIGxldCByZWFsX2EgPSBwYXJzZUludChhWzBdKTtcclxuICAgIGxldCByZWFsX2IgPSBwYXJzZUludChiWzBdKTtcclxuICAgIGxldCBpbWFnX2EgPSBwYXJzZUludChhWzFdKTtcclxuICAgIGxldCBpbWFnX2IgPSBwYXJzZUludChiWzFdKTtcclxuICAgIGxldCByZWFsID0gKHJlYWxfYSAqIHJlYWxfYiArIGltYWdfYSAqIGltYWdfYikgLyAocmVhbF9iICogcmVhbF9iICsgaW1hZ19iICogaW1hZ19iKTtcclxuICAgIGxldCBpbWFnID0gKGltYWdfYSAqIHJlYWxfYiAtIHJlYWxfYSAqIGltYWdfYikgLyAocmVhbF9iICogcmVhbF9iICsgaW1hZ19iICogaW1hZ19iKTtcclxuICAgIHJldHVybiByZWFsICsgJysnICsgaW1hZyArICdpJztcclxuICB9XHJcblxyXG4gIHB1YmxpYyBtb2R1bG9fbnVtX2NvbXBsZXhvcyhleHByZXNzYW86IHN0cmluZyk6IG51bWJlclxyXG4gIHtcclxuICAgIGxldCBhID0gZXhwcmVzc2FvLnNwbGl0KCcrJyk7XHJcbiAgICBsZXQgcmVhbCA9IHBhcnNlSW50KGFbMF0pO1xyXG4gICAgbGV0IGltYWcgPSBwYXJzZUludChhWzFdKTtcclxuICAgIHJldHVybiBNYXRoLnNxcnQocmVhbCAqIHJlYWwgKyBpbWFnICogaW1hZyk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgY29uanVnYWRvX251bV9jb21wbGV4b3MoZXhwcmVzc2FvOiBzdHJpbmcpOiBzdHJpbmdcclxuICB7XHJcbiAgICBsZXQgYSA9IGV4cHJlc3Nhby5zcGxpdCgnKycpO1xyXG4gICAgbGV0IHJlYWwgPSBwYXJzZUludChhWzBdKTtcclxuICAgIGxldCBpbWFnID0gcGFyc2VJbnQoYVsxXSk7XHJcbiAgICByZXR1cm4gcmVhbCArICcrJyArICgtaW1hZykgKyAnaSc7XHJcbiAgfVxyXG5cclxufVxyXG4iXX0=